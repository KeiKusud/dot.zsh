# git svn で情報表示
autoload -Uz vcs_info

zstyle ':vcs_info:*' formats '[%b]'
zstyle ':vcs_info:*' actionformats '[%b|%a]'

precmd () {
  psvar=()
  LANG=en_US.UTF-8 vcs_info
  [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

RPROMPT="%1(v|%F{green}%1v%f|)[%~]"

# tramp-mode
# cf: http://www.emacswiki.org/emacs/TrampMode
if [[ "$TERM" == "dumb" ]]; then
  unsetopt zle
  unsetopt prompt_cr
  unsetopt prompt_subst
  unfunction precmd
  unfunction preexec
  PS1='$ '
fi

function peco-src () {
  local selected_dir=$(ghq list --full-path | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^]' peco-src

# カレントディレクトリをお手軽サーバに
function server () {
  port=$1
  python -m SimpleHTTPServer $1
}

# zsh の man を表示
function zman () {
  PAGER="less -g -s '+/^       "$1"'" man zshall
}

# Emacs の現在のバッファに対応するディレクトリに cd する
# cf: http://d.hatena.ne.jp/syohex/20111026/1319606395
function cde () {
  EMACS_CWD=`emacsclient -e "
      (if (featurep 'elscreen)
          (elscreen-current-directory)
        (non-elscreen-current-directory))" | sed 's/^"\(.*\)"$/\1/'`

  echo "chdir to $EMACS_CWD"
  cd "$EMACS_CWD"
}

# tmuxの環境変数をリフレッシュする
# もっといい策を考えたい！
function tmux-session-refresh () {
  if [ -n "$TMUX" ]; then
    unset $(tmux show-env | sed -n 's/^-//p')
    eval export $(tmux show-env | sed -n 's/$/"/; s/=/="/p')
  fi
}

# catimg
# https://gist.github.com/geta6/5796089
function catimg () {
  ORG=$1

  if [[ ${ORG##*.} =~ '(JPG|jpg|JPEG|jpeg|GIF|gif|PNG|png)' ]]; then

    CATWIDTH=128

    SRC=/tmp/termtmp.png
    convert -resize $(( $CATWIDTH / 2 ))x "$ORG" "$SRC"

    INF=`identify "$SRC" | sed -e 's/^.* \([0-9]*x[0-9]*\) .*$/\1/g'`
    W=`echo "$INF" | cut -d'x' -f1`

    INF=`convert "$SRC" -crop 1x1+$W txt:- 2>&/dev/null`
    INF=`echo $INF | sed -e 's/^.*(\(.*\)[,)].*$/\1/g' | sed -e 's/,/ /g' | sed -e '1,1d'`

    I=0

    RGB2COL()
    {
      I=$(( $I + 1 ))
      _R=$(( $1 * 5 / 255 * 36 ))
      _G=$(( $2 * 5 / 255 * 6 ))
      _B=$(( $3 * 5 / 255 ))
      echo -n "\x1b[48;5;$(( 16 + $_R + $_G + $_B ))m  \x1b[0m"
      [[ 0 -eq $(( $I % $W )) ]] && echo -n '\n'
    }

    I=0

    echo $INF | while read line
    do
      RGB2COL `echo $line`
    done

  else

    cat $@

  fi
}
